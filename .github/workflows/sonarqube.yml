name: SonarQube analysis

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  increment-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Increment version
        id: increment
        run: |
          # Get the latest tag
          latest_tag=$(git describe --tags --abbrev=0)

          # Extract the version number (e.g., "1.1.1" from "v.1.1.1")
          current_version="${latest_tag#v}"

          # Split the version into its parts (major, minor, and patch)
          IFS='.' read -ra version_parts <<< "$current_version"
          major="${version_parts[0]}"
          minor="${version_parts[1]}"
          patch="${version_parts[2]}"

          # Increment the patch version
          ((patch++))

          # Create the new version string
          new_version="${major}.${minor}.${patch}"

          # Print the new version
          echo "New version: $new_version"

          # Set the output variable for later use
          echo "::set-output name=new_version::$new_version"

          # Create and push the new tag
          new_tag="v.${new_version}"
          git tag "$new_tag"
          git push origin "$new_tag"
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: '17' # You can specify the Java version required by SonarQube
          distribution: 'adopt' # Specify the Java distribution you want to use

      - name: Authenticate
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      - name: Run SonarScanner    
        env: 
          PROJECT_KEY: "new-python"
          PROJECT_NAME: "new-python"
          SCANNER_HOME: "/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar-scanner"
          
        run: |
          $SCANNER_HOME/bin/sonar-scanner \
            -Dsonar.projectKey="$PROJECT_KEY" \
            -Dsonar.projectName="$PROJECT_NAME"
           
